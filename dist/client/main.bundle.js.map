{"version":3,"sources":["webpack:///./src/app/app.component.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/loopback/lb-login.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/shared/conversation.service.ts","webpack:///./src/app/shared/nlu.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/shared/analysis.service.ts","webpack:///./src/app/shared/config.service.ts","webpack:///./src/app/auth/admin.guard.ts","webpack:///./src/app/shared/app-comm.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/twitter.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/index.ts","webpack:///./src/app/shared/classes/appcomm.event.class.ts","webpack:///./src/app/utils/alert.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/auth/loopback/lb-login.component.css","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/auth/loopback/lb-login.component.html","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/auth/loopback/lb-login.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cognitive Social CRM';\n\n  public constructor(private titleService: Title) {\n    this.titleService.setTitle( this.title );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Router, Route, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, Subject } from 'rxjs/Rx';\n\nimport { LoopbackLoginService } from './loopback/lb-login.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: LoopbackLoginService) { }\n\n  // Use this function when you want to allow a route to be access only when the user is authenticated\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    return this.authService.isAuthenticated();\n  }\n\n  // Use this function when a module should be loaded via lazy loading only when a user is authenticated\n  canLoad(route: Route): Observable<boolean> | boolean{\n    return this.authService.isAuthenticated();\n  }\n\n  idAdmin(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    return this.authService.isInRole('admin')\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.guard.ts","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\nimport { LoopbackLoginService } from './lb-login.service';\n\n@Component({\n  selector: 'wsl-lb-login',\n  templateUrl: './lb-login.component.html',\n  styleUrls: [\n    './lb-login.component.css'\n  ]\n})\nexport class LoopbackLoginComponent {\n\n  public loginForm: FormGroup; // our model driven form\n  public submitted: boolean; // keep track on whether form is submitted\n  public events: any[] = [];\n  public isError: boolean;\n  public errorMsg: string;\n\n  private credentials: any;\n\n  constructor(private _fb: FormBuilder, private loginService: LoopbackLoginService) {\n    this.loginForm = this._fb.group({\n       username: ['', Validators.required],\n       password: ['', Validators.required],\n       ttl: [3600]\n    });\n  }\n\n  submitLogin() {\n    this.credentials = this.loginForm.value;\n    // Logout previous token in session storage and remove token from session storage\n    let stored = this.loginService.get();\n    if (stored && stored.token) {\n      this.loginService.logout().subscribe(\n        success => {\n          if (success) {\n            this.loginService.destroyToken();\n          } else {\n            console.log('No Token found in session storage');\n          }\n        }\n      )\n    }\n    // Reset the error\n    this.isError = false;\n    let that = this;\n    // Use an observable to call the server and get an async response back\n    this.loginService.login(this.credentials).subscribe(\n      res => {\n        this.loginForm.reset();\n      },\n      err => {\n        console.log('Login Error');\n        this.isError = true;\n        this.errorMsg = err.message;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/loopback/lb-login.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/page-not-found/page-not-found.component.ts","import { Injectable, EventEmitter } from '@angular/core'\nimport { Http, Response } from '@angular/http'\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map'\n\n\n@Injectable()\nexport class ConversationService {\n  public externalMessage$: EventEmitter<any>\n  public watsonDetails$: EventEmitter<any>\n  private _url = window.location.origin + '/api/watson-conversation/send'\n  private user = String(Math.floor(Math.random() * 100000000)) // Random username to associate on server side\n  constructor(private _http: Http) {\n    this.externalMessage$ = new EventEmitter()\n    this.watsonDetails$ = new EventEmitter()\n  }\n\n  sendMessage(message: string): Observable<any> {\n    let body: any = {\n      input: {\n        text: message,\n        user: this.user\n      }\n    }\n    return this._http.post(this._url + '?access_token=' + sessionStorage.getItem('wsl-api-token'), body)\n      .map((res: Response) => res.json())\n  }\n  /**\n   * For sending messages from a source that is\n   * NOT from the message input panel\n   */\n  sendExternalMessage(message: String, type = 'text') {\n    this.externalMessage$.emit(\n      {\n        message: message,\n        type: type\n      })\n  }\n\n  showWatsonDetails() {\n    this.watsonDetails$.emit(true)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/conversation.service.ts","//\n// Implementation of alchemy integration\n//\n\nimport { Injectable } from '@angular/core'\nimport { Http, Response } from '@angular/http'\nimport { Observable } from 'rxjs/Observable'\nimport * as qs from 'querystring'\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class NLUService {\n  private _sentimentUrl = window.location.origin + '/api/nlu/getSentiment'\n  private _emotionUrl = window.location.origin + '/api/nlu/getEmotion'\n  constructor(private _http: Http) {\n  }\n\n  getSentiment(text: string): Observable<any> {\n    return this._http.get(this._sentimentUrl + '?' + qs.stringify({text: text, access_token: sessionStorage.getItem('wsl-api-token')}))\n      .map((res: Response) => res.json())\n  }\n\n  getEmotion(text: string): Observable<any> {\n    return this._http.get(this._emotionUrl + '?' + qs.stringify({text: text, access_token: sessionStorage.getItem('wsl-api-token')}))\n      .map((res: Response) => res.json())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/nlu.service.ts","var map = {\n\t\"./dashboard/dashboard.module\": [\n\t\t677,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nmodule.exports = webpackAsyncContext;\nwebpackAsyncContext.id = 199;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 199\n// module chunks = 2","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Rx';\n\nimport { LoopbackLoginService } from '../auth/loopback/lb-login.service';\n\nconst ANALYSIS_URL = 'api/Analysis'\n\n@Injectable()\nexport class AnalysisService {\n\n  constructor(private authService: LoopbackLoginService) { }\n\n  public listByPostDate(limit, skip): Observable<any> {\n    let url = ANALYSIS_URL + '/listByPostDate'\n    return this.authService.makeAuthenticatedHttpGet(url, [{ name: 'skip', value: skip }, { name: 'limit', value: limit }])\n  }\n\n  public classificationSummary() : Observable<any> {\n    let url = ANALYSIS_URL + '/classificationSummary'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n  public emotionalToneOvertime() : Observable<any> {\n    let url = ANALYSIS_URL + '/emotionalToneOvertime'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n  public sentimentSummary() : Observable<any> {\n    let url = ANALYSIS_URL + '/sentimentSummary'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n  public sentimentOvertime() : Observable<any> {\n    let url = ANALYSIS_URL + '/sentimentOvertime'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n  public keywordsSummary() : Observable<any> {\n    let url = ANALYSIS_URL + '/keywordsSummary'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n  public sentimentTrend() : Observable<any> {\n    let url = ANALYSIS_URL + '/sentimentTrend'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n  public destroyTweet(id) : Observable<any> {\n    let url = ANALYSIS_URL + '/' + id\n    return this.authService.makeAuthenticatedHttpDelete(url)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/analysis.service.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n\n  // These are the colors used on the charts and can be customized.\n  COLORS = ['#c5d86d', '#0090c1', '#ee964b', '#d1495b', '#00798c']\n\n  POSITIVE = '#c5d86d'\n  NEGATIVE = '#d1495b'\n\n  WATSON = '#0090c1'\n  AGENT = '#c5d86d'\n\n  // The analysis page sections is delayed to not exceed the Cloudant\n  // limits.\n  ANALYSIS_LOAD_DELAY = 1000\n  // The setting that tells the app how often to analysis page should be reloaded.\n  STATUS_REFRESH_DELAY = 60000\n\n  TONE_ICONS = {\n    anger: '<i class=\"fa fa-thumbs-o-down fa-lg\" aria-hidden=\"true\"></i>',\n    disgust: '<i class=\"fa fa-thumbs-o-down fa-lg\" aria-hidden=\"true\"></i>',\n    sadness: '<i class=\"fa fa-thumbs-o-down fa-lg\" aria-hidden=\"true\"></i>',\n    fear: '<i class=\"fa fa-thumbs-o-down fa-lg\" aria-hidden=\"true\"></i>',\n    joy: '<i class=\"fa fa-thumbs-o-up fa-lg\" aria-hidden=\"true\"></i>'\n  }\n\n  // The Classification that will be allocated to Watson.  This drives the\n  // donut chart on the first page.\n  ALLOCATION_TO_WATSON = ['SERVICE']\n\n  constructor() { }\n\n  public toTitleCase(str:string) {\n    return str.replace(/\\w\\S*/g, (txt) => {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/config.service.ts","import { Injectable } from '@angular/core';\nimport { Router, Route, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, Subject } from 'rxjs/Rx';\n\nimport { LoopbackLoginService } from './loopback/lb-login.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: LoopbackLoginService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    console.log('In canActivate for admin guard...')\n    return this.authService.isInRole('admin')\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/admin.guard.ts","import { Injectable, EventEmitter } from '@angular/core'\nimport { AppCommEvent } from './classes/appcomm.event.class'\nimport { ConversationService } from './conversation.service'\nimport { NLUService } from './nlu.service'\n\n@Injectable()\nexport class AppCommService {\n  public static typeEnum = {\n    conversationSent: 'CONVSENT',\n    conversationReceived: 'CONVRECEIVED',\n    alchemy: 'ALCHEMY',\n    conversationIntentsReceived: 'INTENTSRECEIVED',\n    showDetailsPopup: 'SHOWDETAILS'\n  }\n  public static subTypeEnum = {\n    conversationSent: {\n      standard: 'STANDARD',\n      external: 'EXTERNAL'\n    },\n    alchemy: {\n      sentiment: 'SENTIMENT',\n      emotion: 'EMOTION',\n      veryLowSentiment: 'VERYLOWSENTIMENT'\n    }\n  }\n  public appComm$ = new EventEmitter<AppCommEvent>()\n  constructor(private _conversation: ConversationService, private _nlu: NLUService) {\n  }\n\n  // Send a message and show the outgoing message in the chat window.\n  public sendMessage(message: string, context: any, external = false) {\n    // Conversation sent event\n    this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.conversationSent, external ? AppCommService.subTypeEnum.conversationSent.external : AppCommService.subTypeEnum.conversationSent.standard, message))\n    if (!external) {\n      // this.getSentiment(message)\n      // this.getEmotion(message)\n    }\n    this._conversation.sendMessage(message).subscribe(response => {\n      // Conversation received event\n      this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.conversationReceived, '', response.text))\n      // Conversation intents updated event\n      // this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.conversationIntentsReceived, '', response.conversationResponse.intents))\n    })\n  }\n\n  public getSentiment(text: string) {\n    this._nlu.getSentiment(text).subscribe(response => {\n        this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.alchemy, AppCommService.subTypeEnum.alchemy.sentiment, response))\n        if (Number(response.sentimentScore) * 100 < -80) {\n          this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.alchemy, AppCommService.subTypeEnum.alchemy.veryLowSentiment, {}))\n        }\n    })\n  }\n\n  public getEmotion(text: string) {\n    this._nlu.getEmotion(text).subscribe(response => {\n        this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.alchemy, AppCommService.subTypeEnum.alchemy.emotion, response))\n    })\n  }\n\n  public showDetailsPopup() {\n    this.appComm$.emit(new AppCommEvent(AppCommService.typeEnum.showDetailsPopup, '', {}))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/app-comm.service.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfigService } from './config.service'\nimport { TwitterService } from './twitter.service'\nimport { AnalysisService } from './analysis.service'\nimport { AppCommService } from './app-comm.service'\nimport { ConversationService } from './conversation.service'\nimport { NLUService } from './nlu.service'\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [ TwitterService, AnalysisService, ConfigService, AppCommService, ConversationService, NLUService ]\n})\nexport class SharedModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Rx';\n\nimport { LoopbackLoginService } from '../auth/loopback/lb-login.service';\n\nconst TWITTER_URL = 'api/Twitter'\n\n@Injectable()\nexport class TwitterService {\n\n  constructor(private authService: LoopbackLoginService) { }\n\n  public listenerStatus(): Observable<any> {\n    let url = TWITTER_URL + '/status'\n    return this.authService.makeAuthenticatedHttpGet(url)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/twitter.service.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes, RouterOutlet } from '@angular/router';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { LoopbackLoginComponent } from './auth/loopback/lb-login.component';\n\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component'\n\nconst APP_ROUTES: Routes = [\n  { path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule', canLoad: [AuthGuard] },\n  { path: 'login', component: LoopbackLoginComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full'  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\nimport { PathLocationStrategy, LocationStrategy } from '@angular/common';\n\nimport {} from 'jasmine';\n\nimport { AuthModule } from './auth/auth.module';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { SharedModule } from './shared/shared.module'\n\nimport { AlertService } from './utils/alert.service'\n\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AuthModule,\n    SharedModule\n  ],\n  providers: [{provide: LocationStrategy, useClass: PathLocationStrategy}, AlertService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { LoopbackLoginComponent } from './loopback/lb-login.component';\nimport { LoopbackLoginService } from './loopback/lb-login.service';\nimport { AuthGuard } from './auth.guard';\nimport { AdminGuard } from './admin.guard';\n\n@NgModule({\n  imports:      [ CommonModule, HttpModule, ReactiveFormsModule],\n  declarations: [ LoopbackLoginComponent ],\n  providers:    [ LoopbackLoginService, AuthGuard, AdminGuard ],\n  exports:      [ LoopbackLoginComponent ]\n})\nexport class AuthModule {\n  constructor() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.module.ts","export * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","//\n// This represents a standard 'AppComm' event used for intra-app communication\n//\nexport class AppCommEvent {\n  public type: string // Type of the event (ex: Messages)\n  public subType: string // Subtype of the event (ex: Added, Removed)\n  public data: any // Payload of event\n  constructor(type: string, subType: string, data: any ) {\n    this.type = type\n    this.subType = subType\n    this.data = data\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/classes/appcomm.event.class.ts","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Subject';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AlertService {\n\n  /*\n  * This service showcases how to send a message to a parent, from a child or peer.\n  */\n  private alert: any = {}\n\n  constructor() {}\n\n  // Create a subject that will be exposed as an Observable\n  private _alertSource: Subject<any> = new Subject<any>();\n\n  // This function is used by the parent to subscribe to messages\n  // from the client or peer.\n  getAlerted(): Observable<any> {\n    return this._alertSource.asObservable();\n  }\n\n  // This function is used by the client or peer to publish a message\n  // to the subscribed parents or peers.\n  setAlert(type, msg) {\n    this.alert.type = type\n    this.alert.msg = msg\n    this._alertSource.next(this.alert)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils/alert.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 387\n// module chunks = 2","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \":host .page {\\n  width: 100vw;\\n  height: 100vh;\\n  background-image: url(\\\"/assets/img/twitter-1795652_1280.jpg\\\");\\n\\n  background-repeat: no-repeat;\\n  background-attachment: fixed;\\n  background-size: cover;\\n  background-position: 50% 0%;\\n}\\n\\n.warning {\\n  color: #ffffff;\\n}\\n\\ninput.form-control {\\n  background-color: #cccccc;\\n  color: #444249;\\n  font-weight: bold;\\n}\\n\\n.form-control:focus {\\n    border-color: #49b0fb;\\n}\\n\\ninput.btn {\\n  background-color: #49b0fb;\\n  color: #ffffff;\\n  box-shadow: 5px 5px 5px 0px rgba(0,0,0,0.50);\\n}\\n\\n.input-group-addon {\\n  background-color: #cccccc;\\n}\\n\\n.panel-heading {\\n  background-color: #444249;\\n  color: #3784BC;\\n}\\n\\n.panel {\\n  width: 400px;\\n  height: 260px;\\n\\n  position: absolute;\\n  top:0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n\\n  margin: auto;\\n\\n  box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.30);\\n\\n  background-color: #444249;\\n  border-color: #444249;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/loopback/lb-login.component.css\n// module id = 388\n// module chunks = 2","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/page-not-found/page-not-found.component.css\n// module id = 389\n// module chunks = 2","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 401\n// module chunks = 2","module.exports = \"<div class=\\\"page\\\">\\n<div *ngIf=\\\"isError\\\" class=\\\"alert alert-danger\\\">\\n  <p>{{errorMsg}}</p>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div>\\n      <div class=\\\"panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <strong> Welcome to Cognitive Social CRM</strong>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"submitLogin()\\\">\\n            <fieldset>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12 col-md-10  col-md-offset-1 \\\">\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <span class=\\\"input-group-addon\\\">\\n                      <i class=\\\"glyphicon glyphicon-user\\\"></i>\\n                    </span>\\n                      <input class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Username\\\" id=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" autofocus>\\n                    </div>\\n                    <small [hidden]=\\\"loginForm.controls.username.valid || (loginForm.controls.username.pristine && !submitted)\\\" class=\\\"warning\\\">\\n                      Username is required.\\n                    </small>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <span class=\\\"input-group-addon\\\">\\n                        <i class=\\\"glyphicon glyphicon-lock\\\"></i>\\n                      </span>\\n                      <input class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" value=\\\"\\\">\\n                    </div>\\n                    <small [hidden]=\\\"loginForm.controls.password.valid || (loginForm.controls.password.pristine && !submitted)\\\" class=\\\"warning\\\">\\n                      Password is required.\\n                    </small>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" value=\\\"Sign in\\\" [disabled]=\\\"!loginForm.valid\\\">\\n                  </div>\\n                </div>\\n              </div>\\n            </fieldset>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/loopback/lb-login.component.html\n// module id = 402\n// module chunks = 2","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top:100px\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-4\\\"></div>\\n    <div class=\\\"col-xs-4\\\">\\n      <div class=\\\"error-template center-block\\\">\\n        <h1>Oops!</h1>\\n        <h2>404 Not Found</h2>\\n        <div class=\\\"error-details\\\">\\n          Sorry, an error has occured, Requested page not found!<br>\\n        </div>\\n        <div class=\\\"error-actions\\\">\\n          <a class=\\\"btn btn-primary\\\" routerLink=\\\"/home\\\">\\n            <i class=\\\"icon-home icon-white\\\"></i> Take Me Home </a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-xs-4\\\"></div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/page-not-found/page-not-found.component.html\n// module id = 403\n// module chunks = 2","import { Injectable } from '@angular/core';\n\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\nimport { Router } from '@angular/router';\n\nimport {Observable} from 'rxjs/Rx';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class LoopbackLoginService {\n\n  // private instance variable to hold base url\n  private loginUrl = '/api/auth/login';\n  private logoutUrl = '/api/auth/logout';\n  private findByIdUrl = '/api/auth';\n  private isInRoleUrl = '/api/auth/isInRole'\n  // key used for saving the token in session storage\n  private TOKEN_KEY = 'wsl-api-token';\n  private USER_ID_KEY = 'wsl-userid';\n\n  // Resolve HTTP using the constructor\n  constructor (private http: Http, private router: Router) {}\n\n  // Function that will indicate if a user is logged in or not.\n  public isAuthenticated(): Observable<boolean> | boolean {\n    let stored = this.get();\n    let authenticated;\n    if (stored && stored.token && stored.id) {\n      let url = this.findByIdUrl + '/' + stored.id + '/accessTokens/' + stored.token + '?access_token=' + stored.token;\n      return this.http.get(url)\n        .map((res: Response) => {\n          return true\n        })\n        .catch((error:any) => {\n          this.destroyToken();\n          return Observable.create(observer => {\n            this.router.navigate(['/login'])\n            observer.next(false)\n            observer.complete()\n          });\n        });\n    } else {\n      return Observable.create(observer => {\n        this.router.navigate(['/login'])\n        observer.next(false)\n        observer.complete()\n      });\n    }\n  }\n\n  // Returns an Observable that will make the login request to the server and return the json containing the token\n  public login(credentials: any): Observable<any> {\n    let bodyString = JSON.stringify(credentials); // Stringify credentials payload\n    let headers = new Headers({ 'Content-Type': 'application/json' }); // ... Set content type to JSON\n    let options = new RequestOptions({ headers: headers }); // Create a request option\n\n    return this.http.post(this.loginUrl, credentials, options) // ...using post request\n       .map((res:Response) => {\n         this.save(res.json());\n         this.router.navigate(['/']);\n         return res.json();\n       })\n       .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n  // Returns an Observable that will make the logout request to the server with the token in session storage\n  public logout() : Observable<string> {\n    let stored = this.get();\n    if (stored && stored.token) {\n      let url = this.logoutUrl + '?access_token=' + stored.token;\n      let options = new RequestOptions({ }); // Create a request option\n      return this.http.post(url, {} ,options)\n        .map((res: Response) => {\n          this.destroyToken();\n          this.router.navigate(['login']);\n          return true;\n        })\n        .catch((err: Response | any) => Observable.throw('Logout Error: ' + err));\n    }\n  }\n\n  public isInRole(role): Observable<any> {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('access_token', this.get().token);\n    params.set('role', role);\n    let requestOptions = new RequestOptions({\n      search: params\n    });\n    return this.http.get(this.isInRoleUrl, requestOptions)\n       .map((res:Response) => res.json().isInRole)\n       .catch((error:any) => {\n         if (error.status === 401) {\n           this.router.navigate(['login'])\n         }\n         return Observable.throw(error.json().error || 'Server error')\n       });\n  }\n\n  // Remove the token from session storage.\n  public destroyToken(): boolean {\n    let stored = this.get();\n    if (stored) {\n      sessionStorage.removeItem(this.TOKEN_KEY);\n      sessionStorage.removeItem(this.USER_ID_KEY);\n      return true;\n    }\n    return false;\n  }\n\n  // Function that will make an authenticated GET request to the server.  If an Unauthenicated is returned by\n  // the server, then it will route to the login page.\n  // You need a URL and an array of objects that contains a name and value for example [ { name: 'id', value: 1 }]\n  public makeAuthenticatedHttpGet(url, queryParams?) : Observable<any> {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('access_token', this.get().token);\n    if (queryParams && queryParams.length > 0) {\n      for (let qp of queryParams) {\n        params.set(qp.name, qp.value.toString())\n      }\n    }\n    let requestOptions = new RequestOptions({\n      search: params\n    });\n    return this.http.get(url, requestOptions)\n       .map((res:Response) => res.json())\n       .catch((error:any) => {\n         if (error.status === 401) {\n           this.router.navigate(['login'])\n         }\n         return Observable.throw(error.json().error || 'Server error')\n       });\n  }\n\n  // Function that will make an authenticated POST request to the server.  If an Unauthenicated is returned by\n  // the server, then it will route to the login page.\n  // You need a URL and an array of objects that contains a name and value for example [ { name: 'id', value: 1 }]\n  public makeAuthenticatedHttpPost(url, formData) : Observable<any> {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('access_token', this.get().token);\n    let requestOptions = new RequestOptions();\n    requestOptions.search = params;\n    return this.http.post(url, formData, requestOptions)\n       .map((res:Response) => res.json())\n       .catch((error:any) => {\n         if (error.status === 401) {\n           this.router.navigate(['login'])\n         }\n         return Observable.throw(error.json().error || 'Server error')\n       });\n  }\n\n  public makeAuthenticatedHttpJsonPost(url, data) : Observable<any> {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('access_token', this.get().token);\n    let headers = new Headers({'Content-Type':'application/json'});\n    let requestOptions = new RequestOptions({\n      headers: headers,\n      search: params,\n      body: JSON.stringify(data)\n    });\n    return this.http.post(url, {}, requestOptions)\n       .map((res:Response) => res.json())\n       .catch((error:any) => {\n         if (error.status === 401) {\n           this.router.navigate(['login'])\n         }\n         return Observable.throw(error.json().error || 'Server error')\n       });\n  }\n\n  public makeAuthenticatedHttpDelete(url, queryParams?) : Observable<any> {\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('access_token', this.get().token);\n    if (queryParams && queryParams.length > 0) {\n      for (let qp of queryParams) {\n        params.set(qp.name, qp.value.toString())\n      }\n    }\n    let requestOptions = new RequestOptions({\n      search: params\n    });\n    return this.http.delete(url, requestOptions)\n       .map((res:Response) => res.json())\n       .catch((error:any) => {\n         if (error.status === 401) {\n           this.router.navigate(['login'])\n         }\n         return Observable.throw(error.json().error || 'Server error')\n       });\n  }\n\n  // Retrieve the api token from the session storage and null if not found\n  get() {\n    return {\n      token: sessionStorage.getItem(this.TOKEN_KEY),\n      id: sessionStorage.getItem(this.USER_ID_KEY)\n    }\n  }\n\n  // Save the token returned from the login response in session storage\n  save(credentials: any) {\n    if (credentials && credentials.id) {\n      sessionStorage.setItem(this.TOKEN_KEY, credentials.id);\n      sessionStorage.setItem(this.USER_ID_KEY, credentials.userId);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/loopback/lb-login.service.ts"],"sourceRoot":""}